//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var StaffList = newStaffListTable("dvds", "staff_list", "")

type staffListTable struct {
	postgres.Table

	//Columns
	ID      postgres.ColumnInteger
	Name    postgres.ColumnString
	Address postgres.ColumnString
	ZipCode postgres.ColumnString
	Phone   postgres.ColumnString
	City    postgres.ColumnString
	Country postgres.ColumnString
	Sid     postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type StaffListTable struct {
	staffListTable

	EXCLUDED staffListTable
}

// AS creates new StaffListTable with assigned alias
func (a StaffListTable) AS(alias string) *StaffListTable {
	return newStaffListTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new StaffListTable with assigned schema name
func (a StaffListTable) FromSchema(schemaName string) *StaffListTable {
	return newStaffListTable(schemaName, a.TableName(), a.Alias())
}

func newStaffListTable(schemaName, tableName, alias string) *StaffListTable {
	return &StaffListTable{
		staffListTable: newStaffListTableImpl(schemaName, tableName, alias),
		EXCLUDED:       newStaffListTableImpl("", "excluded", ""),
	}
}

func newStaffListTableImpl(schemaName, tableName, alias string) staffListTable {
	var (
		IDColumn       = postgres.IntegerColumn("id")
		NameColumn     = postgres.StringColumn("name")
		AddressColumn  = postgres.StringColumn("address")
		ZipCodeColumn  = postgres.StringColumn("zip code")
		PhoneColumn    = postgres.StringColumn("phone")
		CityColumn     = postgres.StringColumn("city")
		CountryColumn  = postgres.StringColumn("country")
		SidColumn      = postgres.IntegerColumn("sid")
		allColumns     = postgres.ColumnList{IDColumn, NameColumn, AddressColumn, ZipCodeColumn, PhoneColumn, CityColumn, CountryColumn, SidColumn}
		mutableColumns = postgres.ColumnList{IDColumn, NameColumn, AddressColumn, ZipCodeColumn, PhoneColumn, CityColumn, CountryColumn, SidColumn}
	)

	return staffListTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:      IDColumn,
		Name:    NameColumn,
		Address: AddressColumn,
		ZipCode: ZipCodeColumn,
		Phone:   PhoneColumn,
		City:    CityColumn,
		Country: CountryColumn,
		Sid:     SidColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
