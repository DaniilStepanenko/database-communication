//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Inventory = newInventoryTable("dvds", "inventory", "")

type inventoryTable struct {
	postgres.Table

	//Columns
	InventoryID postgres.ColumnInteger
	FilmID      postgres.ColumnInteger
	StoreID     postgres.ColumnInteger
	LastUpdate  postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type InventoryTable struct {
	inventoryTable

	EXCLUDED inventoryTable
}

// AS creates new InventoryTable with assigned alias
func (a InventoryTable) AS(alias string) *InventoryTable {
	return newInventoryTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new InventoryTable with assigned schema name
func (a InventoryTable) FromSchema(schemaName string) *InventoryTable {
	return newInventoryTable(schemaName, a.TableName(), a.Alias())
}

func newInventoryTable(schemaName, tableName, alias string) *InventoryTable {
	return &InventoryTable{
		inventoryTable: newInventoryTableImpl(schemaName, tableName, alias),
		EXCLUDED:       newInventoryTableImpl("", "excluded", ""),
	}
}

func newInventoryTableImpl(schemaName, tableName, alias string) inventoryTable {
	var (
		InventoryIDColumn = postgres.IntegerColumn("inventory_id")
		FilmIDColumn      = postgres.IntegerColumn("film_id")
		StoreIDColumn     = postgres.IntegerColumn("store_id")
		LastUpdateColumn  = postgres.TimestampColumn("last_update")
		allColumns        = postgres.ColumnList{InventoryIDColumn, FilmIDColumn, StoreIDColumn, LastUpdateColumn}
		mutableColumns    = postgres.ColumnList{FilmIDColumn, StoreIDColumn, LastUpdateColumn}
	)

	return inventoryTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		InventoryID: InventoryIDColumn,
		FilmID:      FilmIDColumn,
		StoreID:     StoreIDColumn,
		LastUpdate:  LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
