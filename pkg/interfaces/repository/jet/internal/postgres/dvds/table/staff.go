//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Staff = newStaffTable("dvds", "staff", "")

type staffTable struct {
	postgres.Table

	//Columns
	StaffID    postgres.ColumnInteger
	FirstName  postgres.ColumnString
	LastName   postgres.ColumnString
	AddressID  postgres.ColumnInteger
	Email      postgres.ColumnString
	StoreID    postgres.ColumnInteger
	Active     postgres.ColumnBool
	Username   postgres.ColumnString
	Password   postgres.ColumnString
	LastUpdate postgres.ColumnTimestamp
	Picture    postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type StaffTable struct {
	staffTable

	EXCLUDED staffTable
}

// AS creates new StaffTable with assigned alias
func (a StaffTable) AS(alias string) *StaffTable {
	return newStaffTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new StaffTable with assigned schema name
func (a StaffTable) FromSchema(schemaName string) *StaffTable {
	return newStaffTable(schemaName, a.TableName(), a.Alias())
}

func newStaffTable(schemaName, tableName, alias string) *StaffTable {
	return &StaffTable{
		staffTable: newStaffTableImpl(schemaName, tableName, alias),
		EXCLUDED:   newStaffTableImpl("", "excluded", ""),
	}
}

func newStaffTableImpl(schemaName, tableName, alias string) staffTable {
	var (
		StaffIDColumn    = postgres.IntegerColumn("staff_id")
		FirstNameColumn  = postgres.StringColumn("first_name")
		LastNameColumn   = postgres.StringColumn("last_name")
		AddressIDColumn  = postgres.IntegerColumn("address_id")
		EmailColumn      = postgres.StringColumn("email")
		StoreIDColumn    = postgres.IntegerColumn("store_id")
		ActiveColumn     = postgres.BoolColumn("active")
		UsernameColumn   = postgres.StringColumn("username")
		PasswordColumn   = postgres.StringColumn("password")
		LastUpdateColumn = postgres.TimestampColumn("last_update")
		PictureColumn    = postgres.StringColumn("picture")
		allColumns       = postgres.ColumnList{StaffIDColumn, FirstNameColumn, LastNameColumn, AddressIDColumn, EmailColumn, StoreIDColumn, ActiveColumn, UsernameColumn, PasswordColumn, LastUpdateColumn, PictureColumn}
		mutableColumns   = postgres.ColumnList{FirstNameColumn, LastNameColumn, AddressIDColumn, EmailColumn, StoreIDColumn, ActiveColumn, UsernameColumn, PasswordColumn, LastUpdateColumn, PictureColumn}
	)

	return staffTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		StaffID:    StaffIDColumn,
		FirstName:  FirstNameColumn,
		LastName:   LastNameColumn,
		AddressID:  AddressIDColumn,
		Email:      EmailColumn,
		StoreID:    StoreIDColumn,
		Active:     ActiveColumn,
		Username:   UsernameColumn,
		Password:   PasswordColumn,
		LastUpdate: LastUpdateColumn,
		Picture:    PictureColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
